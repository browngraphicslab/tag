#!/bin/sh

################ TODO merge (fix this to be compatible with codebase merge)
# 
#  This unix script should be run in a directory in which you want
#  to create a ship version of TAG. It won't work on
#  Windows, and it probably won't work if you don't have git set up to 
#  clone without asking for your git username and password.
# 
#  To run, use:
# 
#     $ ./CREATE_TAG_SHIP
# 
#  and let it run for a while. It does the following:
# 
#   1. clones the web app repo, changes directory into clone
#   2. runs 'npm install'
#   3. runs 'grunt' and 'grunt uglify' to generate TAG-min.js
#   4. moves the necessary files/directories out of the clone
#      into a build directory called TAG_SHIP_{date}
# 
#  The "necessary files" mentioned in (4) above are:
# 
#     TAG-min.js
#     buildDemo.html      (for experimentation)
#     css/TAG.css
#     js/raphael.js
#     js/tagInk.js
#     js/RIN
#     images
#     fonts
#     html
#
################

echo ""
printf "Cloning http://github.com/browngraphicslab/tag in 3..."
sleep 1
printf "\rCloning http://github.com/browngraphicslab/tag in 2..."
sleep 1
printf "\rCloning http://github.com/browngraphicslab/tag in 1..."
sleep 1
printf "\rCloning http://github.com/browngraphicslab/tag...            \n"
echo ""

DATE=$(date +%y%m%d%H%M%Y%S)
CLONE_DIR="TAG_CHECKOUT_"$DATE
SHIP_DIR="TAG_SHIP_"$DATE
git clone http://github.com/browngraphicslab/tag.git $CLONE_DIR
cd $CLONE_DIR # in tag clone

echo ""
printf "Setting up tagcore submodule in 3..."
sleep 1
printf "\rSetting up tagcore submodule in 2..."
sleep 1
printf "\rSetting up tagcore submodule in 1..."
sleep 1
printf "\rSetting up tagcore submodule...            \n"
echo ""

git submodule init
git submodule update

echo ""
printf "Running npm install in 3..."
sleep 1
printf "\rRunning npm install in 2..."
sleep 1
printf "\rRunning npm install in 1..."
sleep 1
printf "\rRunning npm install (in both tag and tagcore)...           \n"
echo ""

npm install
cd tagcore # in tagcore submodule
npm install

echo ""
printf "Running grunt and grunt uglify in 3..."
sleep 1
printf "\rRunning grunt and grunt uglify in 2..."
sleep 1
printf "\rRunning grunt and grunt uglify in 1..."
sleep 1
printf "\rRunning grunt and grunt uglify...           \n"
echo ""

grunt

echo ""
echo "NOTE: uglify can take a while..."
echo ""

cd .. # in tag clone
grunt

echo ""
printf "Fiddling with files in 3..."
sleep 1
printf "\rFiddling with files in 2..."
sleep 1
printf "\rFiddling with files in 1..."
sleep 1
printf "\rFiddling with files...           \n"
echo ""

cd .. # in parent of tag clone
mkdir $SHIP_DIR
mkdir $SHIP_DIR"/css"
mkdir $SHIP_DIR"/js"
mv $CLONE_DIR"/tagcore/css/TAG.css" $SHIP_DIR"/css"
mv $CLONE_DIR"/tagcore/js/RIN" $SHIP_DIR"/js"
mv $CLONE_DIR"/tagcore/js/tagInk.js" $SHIP_DIR"/js"
mv $CLONE_DIR"/tagcore/js/raphael.js" $SHIP_DIR"/js"
mv $CLONE_DIR"/tagcore/images" $SHIP_DIR
mv $CLONE_DIR"/tagcore/fonts" $SHIP_DIR
mv $CLONE_DIR"/tagcore/html" $SHIP_DIR
mv $CLONE_DIR"/TAG/shipDemo.html" $SHIP_DIR"/demo.html"
mv $CLONE_DIR"/TAG/TAG-min.js" $SHIP_DIR

rm -rf $CLONE_DIR